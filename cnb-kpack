#_ECHO_OFF

export DEMO_NAME="cnb-kpack"

echo "DEMO_NAME=${DEMO_NAME}"
# Set DEMO_HOME in your shell profile script (e.g. add "export DEMO_HOME=~/workspace/demorunner-scripts" to ~/.zprofile or ~/.bash_profile)
echo "DEMO_HOME=${DEMO_HOME}"
export DEMO_TEMP="${DEMO_HOME}/tmp/${DEMO_NAME}"
echo "DEMO_TEMP=${DEMO_TEMP}"
tabset --title ${DEMO_NAME}
rm -rf mkdir -p ${DEMO_TEMP}
mkdir -p ${DEMO_TEMP}
cd ${DEMO_TEMP}

echo "Setting DOCKER_USERNAME and DOCKER_PASSWORD..."
# op item get "DockerHubEnterprise" --format json
if [ -z $DOCKER_PASSWORD ]; then export DOCKER_USERNAME=$(op read op://Work/DockerHubEnterprise/Section_iwtibsn7dbihotun2tcxcikewy/username); export DOCKER_PASSWORD=$(op read op://Work/DockerHubEnterprise/Section_iwtibsn7dbihotun2tcxcikewy/access-token); fi

# Disable fzf interactive for kubectx and kubens (alternatively, can use: "kubectx | cat")
export KUBECTX_IGNORE_FZF=1

kubectx docker-desktop

# To avoid error "Error: error decoding patch: unexpected end of JSON input" when using "kp config ..."
kubectl -n kpack delete cm kp-config

# Cleanup
kubectl delete ns kpack-builds
kubectl delete -f https://github.com/pivotal/kpack/releases/download/v0.7.0/release-0.7.0.yaml

# Install kpack
kubectl apply -f https://github.com/pivotal/kpack/releases/download/v0.7.0/release-0.7.0.yaml
kubectl create ns kpack-builds
kubens kpack-builds

echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

kp config default-repository index.docker.io/$DOCKER_USERNAME/builder
kp config default-service-account default --service-account-namespace kpack-builds

kp secret create regcred --dockerhub $DOCKER_USERNAME

echo -e "- group:\n  - id: paketo-buildpacks/go\n- group:\n  - id: paketo-buildpacks/java" > kpack-builder-order.yaml
kp clusterstack save base --build-image paketobuildpacks/build:base-cnb --run-image paketobuildpacks/run:base-cnb
kp clusterstore save default -b gcr.io/paketo-buildpacks/java -b gcr.io/paketo-buildpacks/go
#cat kpack-builder-order.yaml
kp builder save builder --tag $DOCKER_USERNAME/builder --stack base --store default --order kpack-builder-order.yaml

kp image create frontend-app --tag $DOCKER_USERNAME/frontend-app --builder builder --git https://github.com/ciberkleid/hello-go.git --git-revision 03ce0a044a036a74b40f0afcfaa0590cb10edecd
kp image create inventory-app --tag $DOCKER_USERNAME/inventory-app --builder builder --git https://github.com/ciberkleid/hello-go.git --git-revision 6d815e9fa503a83b69b0145084292eb383d1f0d1

clear
#_ECHO_ON
#_ECHO_# Buildpacks on Kubernetes

##_ECHO_# kpack building blocks
#kubectl api-resources --api-group kpack.io

#_ECHO_# Ops perspective: create builder (stack + buildpacks store)
kubectl get builders

clear
#_ECHO_# Dev perspective: create images
kp image create orders-app --tag $DOCKER_USERNAME/orders-app --builder builder --git https://github.com/ciberkleid/hello-go.git
kp image status orders-app

#_ECHO_# kp image patch orders-app --git-revision 22d2f95b71896f961bb712a259ebec8ea7ae8f3d

kp build logs inventory-app

clear
#_ECHO_# Rebase on OS change
kp image list
kp build list
kp clusterstack save base --build-image paketobuildpacks/build:1.2.17-base-cnb --run-image paketobuildpacks/run:1.2.17-base-cnb
kp build list
kp build logs inventory-app

##_ECHO_# Declarative
#kp clusterstore save default -b gcr.io/paketo-buildpacks/java -b gcr.io/paketo-buildpacks/go --output yaml > default-store.yaml
#kubectl get image inventory-app -o yaml > inventory-app.yaml

#_ECHO_# Questions?
