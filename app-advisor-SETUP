#_ECHO_OFF

# TO RUN:
# cd $DEMO_HOME; demorunner app-advisor-SETUP 1

export DEMO_NAME="app-advisor-SETUP"

echo "DEMO_NAME=${DEMO_NAME}"
# Set DEMO_HOME in your shell profile script (e.g. add "export DEMO_HOME=~/workspace/demorunner-scripts" to ~/.zprofile or ~/.bash_profile)
echo "DEMO_HOME=${DEMO_HOME}"
export DEMO_TEMP="${DEMO_HOME}/tmp/${DEMO_NAME}"
echo "DEMO_TEMP=${DEMO_TEMP}"
tabset --title ${DEMO_NAME}
rm -rf ${DEMO_TEMP}
mkdir -p ${DEMO_TEMP}
cp -R files/${DEMO_NAME}/* ${DEMO_TEMP}
cd ${DEMO_TEMP}

sdk install java 21.0.3-graal
sdk use java 21.0.3-graal

echo
echo "Cleaning up old files..."
rm -rf vmware-app-analyzer-upgrades
rm -rf /tmp/spring-support-database
rm -rf /tmp/cve-database/maven
gh repo clone pivotal-cf/vmware-app-analyzer-upgrades

echo
echo "Compiling App Analyzer CLI..."
cd vmware-app-analyzer-upgrades
./gradlew :cli:nativeCompile
mv cli/build/native/nativeCompile/advisor ~/bin/
which advisor

echo
echo "Setting up App Analyzer server..."
./gradlew :application-advisor-server:assemble
mkdir -p ~/jar
cp application-advisor-server/build/libs/application-advisor-server-0.0.1-SNAPSHOT.jar ~/jar/application-advisor-server.jar
#java -jar ~/jar/application-advisor-server.jar

#_ECHO_ON
# Start the UI
cd app-react
#nvm install 20.11.1
#nvm use 20.11.1
pnpm install
pnpm run dev

# IF FOLLOWING CUSTOMER FLOW IN THE DOCUMENTATION, YOU WOULD
# MANUALLY DOWNLOAD DATA AND CVES AND THEN GET THE SERVER USING
# THE TOKEN OBTAINED FROM Spring Enterprise Subscription under Tanzu in
#      the Customer Support Portal (accessed via Broadcom Okta Portal)
#ARTIFACTORY_TOKEN=$(cat spring-enterprise-subscription-access_token-1806202475410.json| jq -r .access_token)
